/*** Specimen CSS: selectors ***/

/** Basic **/
/* universal */
* {
    font-family: helvetica, "Gill sans", Arial, "sans-serif";
    line-height: 1.2;
}

/* element */
dt {
    text-transform: uppercase;
}

/* class */
.cls-bigger {
    font-size: 1.5em;
}

/* multiple class */
.cls-blue {
    color: blue;
}
.cls-bigger.cls-blue {
    font-style: italic;
}

/* id */
#me {
    font-weight: bold;
}

/** Attributes **/
/* attribute - simple presence */
[data-hello-world] {
    font-weight: bold;
}

/* attribute - exact match, case sensitive */
[data-highlight-color="yellow"] {
    background-color: yellow;
}

/* attribute - exact match, case insensitive */
[data-highlight-color="blue" i] {
    background-color: skyblue;
}

/* attribute - exact match, implicitly case sensitive */
[data-highlight-color="RED"] {
    background-color: darkred;
    color: white
}

/* attribute - word match */
[data-floor-type~="grass"] {
    color: green;
    font-weight: bold;
}

/* attribute - ends-with match */
[href$=".pdf"]::after {
    content: " [pdf]";
}

/* attribute - starts-with match */
.external-link-search [href^="http"]::after {
    content: ' [I can\'t believe you\'re leaving me!]';
    font-size: 0.85rem;
}

/* attribute - substring match */
[href*="untrusted"] {
    color: red;
}

/* attribute - beginning of a hyphen-separated value list */
[hreflang|="en"] {
    color: steelblue;
}


/** Grouping **/
/* descendant */
.descendant-selector-search ul span {
    font-style: italic;
}

/* child */
.child-selector-search > p {
    color: blue;
}

/* adjacent sibling */
.adjacent-sibling-search .specified-immediately-preceding-sibling + li {
    font-weight: bold;
}

/* following siblings */
.following-sibling-search .specified-preceding-sibling ~ li {
    font-weight: bold;
}

/* grid column selector */
.grid-column-search  || .candidate {
  font-weight: bold;
}

/** Pseudo-classes **/
/* root */
:root {
    border: 1px dashed silver;
}

/* empty */
.root-of-empty-search li:empty {
  max-width: 25%;
  background-color: red;
  background-size: 50px 50px;
  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.5) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.5) 50%, rgba(255, 255, 255, 0.5) 75%, transparent 75%, transparent);
}

/* unique children */
.root-of-only-child-search p span:only-child {
    font-weight: bold;
}

/* unique children of type */
.root-of-only-of-type-search p span:only-of-type {
    font-weight: bold;
}

/* first child */
.root-of-first-child-search li:first-child {
    font-weight: bold;
}

/* first of type */
.root-of-first-of-type-search span:first-of-type {
    font-weight: bold;
}

/* last child */
.root-of-last-child-search li:last-child {
    font-weight: bold;
}

/* last of type */
.root-of-last-of-type-search span:last-of-type {
    font-weight: bold;
}

/* nth-child */
.root-of-nth-child-search li:nth-child(2) {
    font-weight: bold;
}

/* nth-child(-n+x) */
.root-of-nth-child-first-four-search li:nth-child(-n+4) {
  font-weight: bold;
}

/* nth-child(xn) */
.root-of-nth-child-xn-even-search li:nth-child(2n) {
    font-weight: bold;
}

.root-of-nth-child-xn-odd-search li:nth-child(2n+1) {
    font-weight: bold;
}

/* nth-child(xn+m) */
.root-of-nth-child-xn-offset-search li:nth-child(3n+2) {
    font-weight: bold;
}

/* nth-child(even) */
.root-of-nth-child-even-search li:nth-child(even) {
    font-weight: bold;
}

/* nth-child(odd) */
.root-of-nth-child-odd-search li:nth-child(odd) {
    font-weight: bold;
}

/* nth-last-child */
.root-of-nth-last-child-search li:nth-last-child(2) {
    font-weight: bold;
}

/* nth-last-child-with-offset */
.root-of-nth-child-xn-last-offset-search li:nth-last-child(3n+2) {
    font-weight: bold;
}

/* is */
.root-of-is-search > :is(span, q) {
    color: blue;
}



/* dynamic pseudo classes on a element */
.root-of-link-pseudo-classes-search .link-individual a:link {
    color: green;
}

.root-of-link-pseudo-classes-search a.link-individual:visited {
    color: red;
}

.root-of-link-pseudo-classes-search a.link-individual:hover {
    color: blue;
}

.root-of-link-pseudo-classes-search a.link-individual:active {
    font-weight: bold;
}

.root-of-link-pseudo-classes-search a.link-any {
    font-style: italic;
    color: cadetblue;
}

.root-of-link-pseudo-classes-search a.link-any {
    font-style: italic;
    color: cadetblue;
}

/* dynamic UI pseudo classes */
.root-of-ui-pseudo-classes-search.focus-within:focus-within {
    background-color: rgba(0, 255, 255, 0.5);
}

.root-of-ui-pseudo-classes-search :enabled {
    border: 2px green solid;
}

.root-of-ui-pseudo-classes-search :disabled {
    border: 2px red solid;
}

.root-of-ui-pseudo-classes-search :checked {
    margin-left: 50px;
}

.root-of-ui-pseudo-classes-search--form1 :focus {
    outline: 5px rebeccapurple solid;
}

.root-of-ui-pseudo-classes-search--form2 :focus-visible {
    outline: 5px rebeccapurple solid;
}

/* target pseudo class */
:target {
    color: #333;
    background-color: #ff0;
}

/* lang pseudo class */
:lang(pt) {
    color: #34e;
}

/* negation pseudo class */
.root-of-negation-pseudo-classes-search :not(.include-me) {
    color: red;
    font-weight: bold;
}

/******************
 Pesudo element syntax uses '::' prefix (cf ':' prefix for pseudo classes).
 Note that IE8 is buggy and does not recognise the '::' prefix. When supporting
 IE8, specify ':pseudo-element' then '::pseudoelement' in stylesheet.
 *****************/
 
/* first letter pseudo element */
.first-letter-target::first-letter {
    font-size: 200%;
}

/* first letter pseudo element */
.first-line-target::first-line {
    font-weight: bold;
}

/* generated content ::before */
.put-stuff-before-me::before {
    font-style: italic;
    content: "am just nippin' in here, cheekily! "
}

/* generated content ::after */
.put-stuff-after-me::after {
    font-style: italic;
    content: " loitering at the end..."
}
